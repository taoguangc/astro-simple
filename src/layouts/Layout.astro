---
import '@fontsource/inter'
import '~/assets/styles/index.css'

import Header from '~/components/Header.astro'
import Footer from '~/components/Footer.astro'

export interface Props {
  title?: string
}

const { title } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="font-inter antialiased bg-white text-gray-900 tracking-wide">
    <div class="flex flex-col min-h-screen overflow-hidden">
      <Header />
      <main class="flex-grow">
        <slot />
      </main>
      <Footer />
    </div>
    <script>
      import Lenis from '@studio-freight/lenis'

      const lenis = new Lenis({
        duration: 1.2,
        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou
        orientation: 'vertical', // vertical, horizontal
        gestureOrientation: 'vertical', // vertical, horizontal, both
        smoothWheel: true,
        wheelMultiplier: 1,
        smoothTouch: false,
        touchMultiplier: 2,
        infinite: false,
      })

      function raf(time) {
        lenis.raf(time)
        requestAnimationFrame(raf)
      }

      requestAnimationFrame(raf)

      import { animate, stagger, spring, inView } from 'motion'
      // const m = document.querySelectorAll('.motion')
      inView('[data-in]', ({ target }) => {
        animate(target.querySelectorAll('[data-up]'), { opacity: [0, 1], y: [-50, 0] }, { delay: stagger(0.3), duration: 1, easing: spring() })
        // return () => controls.stop()
      })
      inView('[data-in]', ({ target }) => {
        animate(target.querySelectorAll('[data-fade]'), { opacity: [0, 1] }, { delay: stagger(0.3), duration: 2, easing: 'ease-out' })
        // return () => controls.stop()
      })
    </script>
  </body>
</html>
